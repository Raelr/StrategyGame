[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 tiled_factor = vec2(4.0,4.0);
uniform float aspect_ratio = 0.5;
uniform vec2 time_scale = vec2(1.0, 1.0);
uniform vec2 offset_scale = vec2(2.0, 2.0);
uniform vec2 amplitude = vec2(0.05, 0.1);

void fragment() {
	vec2 tiled_uvs = UV * tiled_factor;
	tiled_uvs.y *= aspect_ratio;
	//COLOR = vec4(tiled_uvs, 0.0, 1.0);
	vec2 waves_uv_offset;
	waves_uv_offset.x = cos(TIME * time_scale.x + (tiled_uvs.x + tiled_uvs.y) * offset_scale.x);
	waves_uv_offset.y = sin(TIME * time_scale.y + (tiled_uvs.x + tiled_uvs.y) * offset_scale.y);
	
	COLOR = texture(TEXTURE, tiled_uvs + waves_uv_offset * amplitude);
}"

[resource]
shader = SubResource( 1 )
shader_param/tiled_factor = Vector2( 4, 4 )
shader_param/aspect_ratio = 1.0
shader_param/time_scale = Vector2( 3, 3 )
shader_param/offset_scale = Vector2( 2, 0.2 )
shader_param/amplitude = Vector2( 0.05, 0 )
